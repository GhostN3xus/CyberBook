generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      String   @default("viewer")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  notes     Note[]
  auditLogs AuditLog[]
}

model Vulnerability {
  id           String           @id @default(uuid())
  title        String
  summary      String
  cwe          String
  risk         String
  complexity   String
  insecureCode String
  secureCode   String
  remediation  String
  references   VulnerabilityReference[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model VulnerabilityReference {
  id              String        @id @default(uuid())
  label           String
  url             String
  vulnerability   Vulnerability @relation(fields: [vulnerabilityId], references: [id], onDelete: Cascade)
  vulnerabilityId String
}

model Article {
  id          String   @id @default(uuid())
  title       String
  summary     String
  body        String
  tags        String[]
  publishedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model OfficialDoc {
  id        String   @id @default(uuid())
  title     String
  summary   String
  url       String
  createdAt DateTime @default(now())
}

model Tool {
  id        String   @id @default(uuid())
  title     String
  summary   String
  vendor    String
  category  String
  pricing   String
  website   String
  createdAt DateTime @default(now())
}

model Note {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  title     String
  content   String
  contextId String
  updatedAt DateTime @updatedAt

  @@unique([userId, contextId])
}

model AuditLog {
  id        String   @id @default(uuid())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  action    String
  metadata  Json?
  createdAt DateTime @default(now())
}

model RefreshToken {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}
